version: "3.9"

networks:
  golang-net:
    name: golang-net
    driver: bridge

services:
  todo-app:
    build:
      context: ../.
      dockerfile: Dockerfile
      args:
        - GOLANG_IMAGE=golang:1.21-alpine3.18
    image: todo-app
    container_name: todo_app
    command: ./todo-app
    ports:
      - 8000:8000
    depends_on:
      - migrations
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_NAME=postgres
      - DB_PASSWORD=qwerty
      - APP_PORT=8000
    networks:
      - golang-net

  db:
    restart: always
    image: postgres:15-alpine3.18
    container_name: app_postgres
    volumes:
      - ./.database/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=qwerty
    ports:
      - 5432:5432
    networks:
      - golang-net

  migrations:
    image: alpine:3.18
    container_name: app_migrations
    volumes:
      - ../schema:/app
    command: /bin/sh -c "apk update && apk add curl && curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz | tar xvz && ./migrate -path=/app -database=postgres://$$DB_USER:$$DB_PASS@$$DB_HOST:$$DB_PORT/$$DB_NAME?sslmode=disable $$MIGRAT_CMD"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_NAME=postgres
      - DB_PASS=qwerty
      - MIGRAT_CMD=up
    restart: no
    networks:
      - golang-net

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-data:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=5h'
      - '--web.enable-lifecycle'
      - '--log.level=info'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - golang-net

  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    volumes:
      - ./grafana-data:/var/lib/grafana:rw
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - golang-net
